<<<<<<< HEAD
dist: trusty
=======
# Travis caches can be manually removed if necessary. This is one of the very
# few manual operations that is possible with Travis, and it can be done by a
# DigiByte Core GitHub member via the Travis web interface [0].
#
# Travis CI uploads the cache after the script phase of the build [1].
# However, the build is terminated without saving the cache if it takes over
# 50 minutes [2]. Thus, if we spent too much time in early build stages, fail
# with an error and save the cache.
#
# [0] https://travis-ci.org/digibyte/digibyte/caches
# [1] https://docs.travis-ci.com/user/caching/#build-phases
# [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts

version: ~> 1.0

dist: bionic
>>>>>>> 5358de127d898d4bb197e4d8dc2db4113391bb25
os: linux
language: minimal
arch: amd64
cache:
  directories:
    - $TRAVIS_BUILD_DIR/depends/built
    - $TRAVIS_BUILD_DIR/depends/sdk-sources
    - $TRAVIS_BUILD_DIR/ci/scratch/.ccache
    - $TRAVIS_BUILD_DIR/releases/$HOST
stages:
  - lint
  - test
env:
  global:
<<<<<<< HEAD
    - MAKEJOBS=-j3
    - RUN_TESTS=false
    - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
    - DOCKER_NAME_TAG=ubuntu:18.04
    - LC_ALL=C.UTF-8
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - CCACHE_DIR=$HOME/.ccache
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://digibytecore.org/depends-sources/sdks
    - WINEDEBUG=fixme-all
    - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
=======
    - CI_RETRY_EXE="travis_retry"
    - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. See https://docs.travis-ci.com/user/customizing-the-build#build-timeouts . Please manually re-run this job by using the travis restart button. The next run should not time out because the build cache has been saved."
>>>>>>> 5358de127d898d4bb197e4d8dc2db4113391bb25
before_install:
  - set -o errexit; source ./ci/test/00_setup_env.sh
  - set -o errexit; source ./ci/test/03_before_install.sh
install:
  - set -o errexit; source ./ci/test/04_install.sh
before_script:
<<<<<<< HEAD
    - DOCKER_EXEC echo \> \$HOME/.digibyte  # Make sure default datadir does not exist and is never read by creating a dummy file
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - if [[ $HOST = *-mingw32 ]]; then DOCKER_EXEC update-alternatives --set $HOST-g++ \$\(which $HOST-g++-posix\); fi
    - if [ -z "$NO_DEPENDS" ]; then DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi
script:
    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - DIGIBYTE_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - if [ -z "$NO_DEPENDS" ]; then DOCKER_EXEC ccache --max-size=$CCACHE_SIZE; fi
    - BEGIN_FOLD autogen; test -n "$CONFIG_SHELL" && DOCKER_EXEC "$CONFIG_SHELL" -c "./autogen.sh" || DOCKER_EXEC ./autogen.sh; END_FOLD
    - mkdir build && cd build
    - BEGIN_FOLD configure; DOCKER_EXEC ../configure --cache-file=config.cache $DIGIBYTE_CONFIG_ALL $DIGIBYTE_CONFIG || ( cat config.log && false); END_FOLD
    - BEGIN_FOLD distdir; DOCKER_EXEC make distdir VERSION=$HOST; END_FOLD
    - cd digibyte-$HOST
    - BEGIN_FOLD configure; DOCKER_EXEC ./configure --cache-file=../config.cache $DIGIBYTE_CONFIG_ALL $DIGIBYTE_CONFIG || ( cat config.log && false); END_FOLD
    - BEGIN_FOLD build; DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && DOCKER_EXEC make $GOAL V=1 ; false ); END_FOLD
    - if [ "$RUN_TESTS" = "true" ]; then BEGIN_FOLD unit-tests; DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1; END_FOLD; fi
    - if [ "$RUN_BENCH" = "true" ]; then BEGIN_FOLD bench; DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib $OUTDIR/bin/bench_digibyte -scaling=0.001 ; END_FOLD; fi
    - if [ "$TRAVIS_EVENT_TYPE" = "cron" ]; then extended="--extended --exclude feature_pruning,feature_dbcrash"; fi
    - if [ "$RUN_TESTS" = "true" ]; then BEGIN_FOLD functional-tests; DOCKER_EXEC test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet --failfast ${extended}; END_FOLD; fi
=======
  # Temporary workaround for https://github.com/digibyte/digibyte/issues/16368
  - for i in {1..4}; do echo "$(sleep 500)" ; done &
  - set -o errexit; source ./ci/test/05_before_script.sh &> "/dev/null"
script:
  - export CONTINUE=1
  - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
  - if [ $TRAVIS_REPO_SLUG = "digibyte/digibyte" ]; then export CONTINUE=1; fi  # continue on repos with extended build time (90 minutes)
  - if [ $CONTINUE = "1" ]; then set -o errexit; source ./ci/test/06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
  - if [[ $SECONDS -gt 50*60-$EXPECTED_TESTS_DURATION_IN_SECONDS ]]; then export CONTINUE=0; fi
  - if [ $TRAVIS_REPO_SLUG = "digibyte/digibyte" ]; then export CONTINUE=1; fi  # continue on repos with extended build time (90 minutes)
  - if [ $CONTINUE = "1" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
>>>>>>> 5358de127d898d4bb197e4d8dc2db4113391bb25
after_script:
  - echo $TRAVIS_COMMIT_RANGE
jobs:
  include:
<<<<<<< HEAD
# ARM
    - stage: test
      env: >-
        HOST=arm-linux-gnueabihf
        PACKAGES="g++-arm-linux-gnueabihf"
        DEP_OPTS="NO_QT=1"
        GOAL="install"
        DIGIBYTE_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Win32
    - stage: test
      env: >-
        HOST=i686-w64-mingw32
        DPKG_ADD_ARCH="i386"
        DEP_OPTS="NO_QT=1"
        PACKAGES="python3 nsis g++-mingw-w64-i686 wine-binfmt wine32"
        RUN_TESTS=true
        GOAL="install"
        DIGIBYTE_CONFIG="--enable-reduce-exports"
# Win64
    - stage: test
      env: >-
        HOST=x86_64-w64-mingw32
        DEP_OPTS="NO_QT=1"
        PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64"
        RUN_TESTS=true
        GOAL="install"
        DIGIBYTE_CONFIG="--enable-reduce-exports"
# 32-bit + dash
    - stage: test
      env: >-
        HOST=i686-pc-linux-gnu
        PACKAGES="g++-multilib python3-zmq"
        DEP_OPTS="NO_QT=1"
        RUN_TESTS=true
        GOAL="install"
        DIGIBYTE_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++"
        CONFIG_SHELL="/bin/dash"
# x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)
    - stage: test
      env: >-
        HOST=x86_64-unknown-linux-gnu
        PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev"
        DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1"
        RUN_TESTS=true
        RUN_BENCH=true
        GOAL="install"
        DIGIBYTE_CONFIG="--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CXXFLAGS=\"-g0 -O2\""
# x86_64 Linux (Qt5 & system libs)
    - stage: test
      env: >-
        HOST=x86_64-unknown-linux-gnu
        PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev"
        NO_DEPENDS=1
        RUN_TESTS=true
        GOAL="install"
        DIGIBYTE_CONFIG="--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER"
# x86_64 Linux, No wallet
    - stage: test
      env: >-
        HOST=x86_64-unknown-linux-gnu
        PACKAGES="python3"
        DEP_OPTS="NO_WALLET=1"
        RUN_TESTS=true
        GOAL="install"
        DIGIBYTE_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Cross-Mac
    - stage: test
      env: >-
        HOST=x86_64-apple-darwin14
        PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git"
        OSX_SDK=10.11
        GOAL="all deploy"
        DIGIBYTE_CONFIG="--enable-gui --enable-reduce-exports --enable-werror"
=======

>>>>>>> 5358de127d898d4bb197e4d8dc2db4113391bb25
    - stage: lint
      name: 'lint'
      env:
<<<<<<< HEAD
      cache: false
=======
      cache: pip
>>>>>>> 5358de127d898d4bb197e4d8dc2db4113391bb25
      language: python
      python: '3.5' # Oldest supported version according to doc/dependencies.md
      install:
<<<<<<< HEAD
        - travis_retry pip install flake8==3.5.0
=======
        - set -o errexit; source ./ci/lint/04_install.sh
>>>>>>> 5358de127d898d4bb197e4d8dc2db4113391bb25
      before_script:
        - set -o errexit; source ./ci/lint/05_before_script.sh
      script:
<<<<<<< HEAD
        - if [ "$TRAVIS_EVENT_TYPE" = "pull_request" ]; then test/lint/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi
        - test/lint/git-subtree-check.sh src/crypto/ctaes
        - test/lint/git-subtree-check.sh src/secp256k1
        - test/lint/git-subtree-check.sh src/univalue
        - test/lint/git-subtree-check.sh src/leveldb
        - test/lint/check-doc.py
        - test/lint/check-rpc-mappings.py .
        - test/lint/lint-all.sh
        - if [ "$TRAVIS_REPO_SLUG" = "digibyte/digibyte" -a "$TRAVIS_EVENT_TYPE" = "cron" ]; then
              while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys &&
              travis_wait 50 contrib/verify-commits/verify-commits.py;
          fi
=======
        - set -o errexit; source ./ci/lint/06_script.sh

    - stage: test
      name: '32-bit + dash  [GOAL: install]  [CentOS 7]  [gui]'
      env: >-
        FILE_ENV="./ci/test/00_setup_env_i686_centos.sh"

    - stage: test
      name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no wallet]'
      env: >-
        FILE_ENV="./ci/test/00_setup_env_native_nowallet.sh"
>>>>>>> 5358de127d898d4bb197e4d8dc2db4113391bb25
